<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title>Recent Content on my new hugo site </title>
      <generator uri="https://hugo.spf13.com">Hugo</generator>
    <link>http://localhost:1313/index.xml/</link>
    <language>en-us</language>
    
    
    <updated>Tue, 01 Jan 2008 00:00:00 UTC</updated>
    
    <item>
      <title>Reagent</title>
      <link>http://localhost:1313/reagent/</link>
      <pubDate>Tue, 01 Jan 2008 00:00:00 UTC</pubDate>
      
      <guid>http://localhost:1313/reagent/</guid>
      <description>

&lt;h1 id=&#34;toc_0&#34;&gt;Reagent&lt;/h1&gt;

&lt;p&gt;this is reagent&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>JavaScript</title>
      <link>http://localhost:1313/javascript/</link>
      <pubDate>Tue, 01 Jan 2008 00:00:00 UTC</pubDate>
      
      <guid>http://localhost:1313/javascript/</guid>
      <description>

&lt;h1 id=&#34;toc_0&#34;&gt;Working With JavaScript&lt;/h1&gt;

&lt;h2 id=&#34;toc_1&#34;&gt;Accessing vars&lt;/h2&gt;

&lt;p&gt;Given:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  var name = &amp;quot;Matt&amp;quot;;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;JavaScript:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  console.log(name)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ClojureScript&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  (println js/name)
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;toc_2&#34;&gt;Accessing object attributes&lt;/h2&gt;

&lt;p&gt;Given:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  var person = {name: &amp;quot;Matt&amp;quot;}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;JavaScript:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  console.log(person.name);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ClojureScript:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  (println (.-name js/person))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;JavaScript object attributes are accessed via the .-{property} macro&lt;/p&gt;

&lt;h2 id=&#34;toc_3&#34;&gt;Invoking methods&lt;/h2&gt;

&lt;p&gt;JavaScript:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  document.getElementById(&amp;quot;app&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ClojureScript:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  (.getElementById js/document &amp;quot;app&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;toc_4&#34;&gt;Invoking chained methods&lt;/h2&gt;

&lt;p&gt;JavaScript:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  document.getElementById(&amp;quot;app&amp;quot;).append(element);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ClojureScript:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  (.append (.getElementById js/document &amp;quot;app&amp;quot;) element)
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Data Types</title>
      <link>http://localhost:1313/data-types/</link>
      <pubDate>Tue, 01 Jan 2008 00:00:00 UTC</pubDate>
      
      <guid>http://localhost:1313/data-types/</guid>
      <description>

&lt;h1 id=&#34;toc_0&#34;&gt;ClojureScript Data Types&lt;/h1&gt;

&lt;h2 id=&#34;toc_1&#34;&gt;Arrays (Vectors)&lt;/h2&gt;

&lt;p&gt;JavaScript:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  var values = [1, 2, 3, 4];
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ClojureScript:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  (def values [1 2 3 4])
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;toc_2&#34;&gt;Maps&lt;/h2&gt;

&lt;p&gt;JavaScript:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  var params = {&amp;quot;hello&amp;quot;: &amp;quot;world&amp;quot;, &amp;quot;foo&amp;quot;: &amp;quot;bar&amp;quot;};
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ClojureScript:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  (def params { &amp;quot;hello&amp;quot; &amp;quot;world&amp;quot; 
                &amp;quot;foo&amp;quot; &amp;quot;bar&amp;quot; })
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ClojureScript allows you to put commas where you would expect, but it&amp;rsquo;s completely
optional and generally not used.  For clarity, it&amp;rsquo;s best to put key/value pairs on their
own line.&lt;/p&gt;

&lt;h2 id=&#34;toc_3&#34;&gt;Sets&lt;/h2&gt;

&lt;p&gt;A set is a collection with only unique elements.  JavaScript has no corresponding structure.&lt;/p&gt;

&lt;p&gt;ClojureScript:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  (def params #{ &amp;quot;1&amp;quot; &amp;quot;2&amp;quot; &amp;quot;3&amp;quot;}) 
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;toc_4&#34;&gt;Accessing Arrays (Vectors)&lt;/h2&gt;

&lt;p&gt;JavaScript:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  var values = [1, 2, 3, 4];
  console.log(values[0]);  // prints 1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ClojureScript:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  (def values [1 2 3 4])
  (println (values 0)) ; prints 1
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;toc_5&#34;&gt;Accessing Maps&lt;/h2&gt;

&lt;p&gt;JavaScript:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  var params = {&amp;quot;hello&amp;quot;: &amp;quot;world&amp;quot;, &amp;quot;foo&amp;quot;: &amp;quot;bar&amp;quot;};
  console.log(params[&amp;quot;hello&amp;quot;]);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ClojureScript:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  (def params { &amp;quot;hello&amp;quot; &amp;quot;world&amp;quot; 
                &amp;quot;foo&amp;quot; &amp;quot;bar&amp;quot; })
  (println (params &amp;quot;hello&amp;quot;))                
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ClojureScript allows you to put commas where you would expect, but it&amp;rsquo;s completely
optional and generally not used.  For clarity, it&amp;rsquo;s best to put key/value pairs on their
own line.&lt;/p&gt;

&lt;h2 id=&#34;toc_6&#34;&gt;Accessing Sets&lt;/h2&gt;

&lt;p&gt;ClojureScript:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  (def params #{ &amp;quot;a&amp;quot; &amp;quot;b&amp;quot; &amp;quot;c&amp;quot;})
  (println (params &amp;quot;a&amp;quot;)) ; prints a
  (println (params &amp;quot;d&amp;quot;)) ; prints nil
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>